// // Test input type support
// function supportsInputType (type) {
//   var i = document.createElement('input');
//   i.setAttribute('type', type);
//   return i.type !== 'text';
// }

// // Test input attribute support
// function supportsInputAttribute (attribute) {
//   return attribute in document.createElement('input');
// }

$(function () {
  var $forms = $('form');

  // Change option color on select
  var select = document.getElementById('select');
  if (select) {
    select.onchange = function () {
      select.className = this.options[this.selectedIndex].className;
    }
  }

  // Add co-worker fields to subscribe form
  <% if root_locale == :nl %>
  $("#add-button").click(function(){
    $(".extra-person-placeholder").append(
      "<h3><%= t("form.add_coworker") %></h3>" +
      "<input type='text' name='coworker-name' placeholder='<%= t("form.name") %>'>" +
      "<input type='text' name='coworker-position' placeholder='<%= t("form.position") %>'>" +
      "<input type='text' name='coworker-email' placeholder='<%= t("form.email") %>'>"
    );

    var i = 1;
    $("input[name^='coworker-name']").attr('name', function (i) {
      return "coworker-name" + "-" + ++i;
    })
    $("input[name^='coworker-position']").attr('name', function (i) {
      return "coworker-position" + "-" + ++i;
    })
    $("input[name^='coworker-email']").attr('name', function (i) {
      return "coworker-email" + "-" + ++i;
    })
  });
  <% end %>

  // Placeholder polyfill
  $('input, textarea').placeholder();

  // Form submit
  $forms.on('submit', function (event) {
    var $form = $(this);

    // Form validation
    var $invalidInputs = $();

    $form.find('input:visible').each(function () {
      var $input = $(this).removeClass('invalid');
      var value = $.trim($input.val());

      // validate required
      if ($input.attr('required') && value.length < 1) {
        $invalidInputs = $invalidInputs.add($input);
        return true;
      }

      // validate type
      switch ($input.attr('type')) {
        case 'email':
          if (value.indexOf('@') < 1 || value.length < 5) {
            $invalidInputs = $invalidInputs.add($input);
          }
          break;
      }
    });

    // Found invalid fields?
    if ($invalidInputs.length) {
      $invalidInputs.addClass('invalid').first().focus();

      event.preventDefault();
      event.stopImmediatePropagation();
      return false;
    }

    // Download forms
    var $downloadInput = $form.find('input[name=download]');
    if ($downloadInput.length) {

      // Open download
      window.open($downloadInput.val(), '_blank');
    }
  });
});
